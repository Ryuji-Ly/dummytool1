services:
    traefik:
        image: traefik:v3.1
        container_name: traefik
        restart: unless-stopped
        command:
            - --api.dashboard=true
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --certificatesresolvers.myresolver.acme.httpchallenge=true
            - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
            - --certificatesresolvers.myresolver.acme.email=alankim017@gmail.com
            - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./letsencrypt:/letsencrypt
        networks:
            - app-network

    postgres:
        image: postgres:15
        container_name: postgres
        restart: unless-stopped
        environment:
            POSTGRES_DB: keycloak
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: password
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network

    keycloak:
        image: quay.io/keycloak/keycloak:25.0.5
        container_name: keycloak
        restart: unless-stopped
        environment:
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: admin
            KC_DB: postgres
            KC_DB_URL_HOST: postgres
            KC_DB_USERNAME: keycloak
            KC_DB_PASSWORD: password
            KC_HOSTNAME: dummytool1.duckdns.org
            KC_HOSTNAME_STRICT: "false"
            KC_HTTP_ENABLED: "true"
            KC_PROXY: edge
            KC_HTTP_RELATIVE_PATH: /auth
        command:
            - start
        ports:
            - "8080:8080"
        depends_on:
            - postgres
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.keycloak.rule=Host(`dummytool1.duckdns.org`) && PathPrefix(`/auth`)"
            - "traefik.http.routers.keycloak.entrypoints=websecure"
            - "traefik.http.routers.keycloak.tls.certresolver=myresolver"
            - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
            - "traefik.http.routers.keycloak-http.rule=Host(`dummytool1.duckdns.org`) && PathPrefix(`/auth`)"
            - "traefik.http.routers.keycloak-http.entrypoints=web"
            - "traefik.http.routers.keycloak-http.middlewares=redirect-to-https"
            - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        networks:
            - app-network

    app:
        build: .
        container_name: dummytool1
        restart: unless-stopped
        environment:
            - NODE_ENV=production
            - NEXTAUTH_URL=https://dummytool1.duckdns.org
            - NEXTAUTH_SECRET=gqtiegBqprRUhZvcMEYEiZyZYOIKsipo
            - KEYCLOAK_ISSUER=https://dummytool1.duckdns.org/auth/realms/dummytool1
            - KEYCLOAK_CLIENT_ID=dummytool1
            - KEYCLOAK_CLIENT_SECRET=your-client-secret
        ports:
            - "3000:3000"
        depends_on:
            - keycloak
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.app.rule=Host(`dummytool1.duckdns.org`) && !PathPrefix(`/auth`)"
            - "traefik.http.routers.app.entrypoints=websecure"
            - "traefik.http.routers.app.tls.certresolver=myresolver"
            - "traefik.http.routers.app.priority=1"
            - "traefik.http.services.app.loadbalancer.server.port=3000"
            - "traefik.http.routers.app-http.rule=Host(`dummytool1.duckdns.org`) && !PathPrefix(`/auth`)"
            - "traefik.http.routers.app-http.entrypoints=web"
            - "traefik.http.routers.app-http.middlewares=redirect-to-https"
        networks:
            - app-network

volumes:
    postgres_data:
    letsencrypt:

networks:
    app-network:
        driver: bridge
